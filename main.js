(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var o=e.g.document;if(!t&&o&&(o.currentScript&&(t=o.currentScript.src),!t)){var n=o.getElementsByTagName("script");n.length&&(t=n[n.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=e.p+"1f757ac1762962d60ddc.png",o=e.p+"d367d5dbff6ca8e7e2f2.png",n=e.p+"df3b5dddd60da7069980.png",c=e.p+"fe50e1a3f0405d606b0c.png",s=e.p+"cfabfc38136dc55a9a0d.png",r=[],l=()=>{const e=document.querySelector(".tasks"),t=document.querySelector(".bg-image");e.childElementCount>1?t.src=c:1===e.childElementCount&&(t.src=s)},d=class{constructor(e,t,o,n,c){this.project=e,this.title=t,this.date=o,this.type=n,this.status=c}addingNewTask(){const e=document.querySelector(".tasks"),t=document.createElement("div");t.classList.add("task");const c=document.createElement("p");c.textContent=this.title;const s=document.createElement("p");s.textContent=this.date;const d=document.createElement("p");d.textContent=this.type;const a=document.createElement("div");a.classList.add("task-option");const i=new Image;i.src=n;const u=new Image;u.src=o,"complete"===this.status&&t.classList.add("complete"),e.appendChild(t),t.appendChild(c),t.appendChild(s),t.appendChild(d),t.appendChild(a),a.appendChild(i),a.appendChild(u),l(),i.addEventListener("click",(()=>{const e=i.parentNode.parentNode.children[0].textContent;for(let t=0;t<r.length;t+=1)e===r[t].title&&("complete"===r[t].status?r[t].status="incomplete":"incomplete"===r[t].status&&(r[t].status="complete"));i.parentNode.parentNode.classList.toggle("complete")})),u.addEventListener("click",(()=>{const e=u.parentNode.parentNode.children[0].textContent;for(let t=0;t<r.length;t+=1)e===r[t].title&&r.splice(t,1);u.parentNode.parentNode.remove(),l()}))}},a=document.querySelector(".new-project"),i=document.querySelector(".project-form"),u=document.querySelector(".add-button"),m=document.querySelector(".new-projects"),p=document.querySelector(".cancle-button"),h=document.querySelector(".tasks"),g=()=>{for(;h.childElementCount>1;)h.lastChild.remove();const e=document.querySelector(".task-list").children[0].textContent;for(let t=0;t<r.length;t+=1)e===r[t].project&&new d(r[t].project,r[t].title,r[t].date,r[t].type,r[t].status).addingNewTask();l()},v=()=>{const e=document.querySelectorAll("#project"),t=document.querySelector(".task-list");e.forEach((e=>{e.addEventListener("click",(()=>{if(t.childNodes[1].textContent===e.textContent)return!1;t.childNodes[1].textContent=e.textContent,g()}))}))};(()=>{const e=document.querySelector(".menu"),t=document.querySelector(".projects"),o=document.querySelector(".task-list"),n=document.querySelector(".tasks"),c=document.querySelector(".task"),s=document.querySelector(".add-task"),r=document.querySelector(".vertical"),l=document.querySelector(".horizontol"),d=document.querySelector(".add-task-form");o.children[0].textContent="Casual",e.addEventListener("click",(()=>{m.childElementCount>2&&document.querySelectorAll(".new-project-title").forEach((e=>{e.classList.toggle("show")})),e.classList.toggle("change"),t.classList.toggle("show"),o.classList.toggle("show"),d.classList.toggle("show"),i.classList.remove("show"),n.classList.toggle("show"),c.classList.toggle("show")})),s.addEventListener("click",(()=>{r.classList.toggle("adding"),l.classList.toggle("adding"),d.classList.toggle("adding"),e.parentNode.parentNode.classList.add("show"),document.querySelector(".form-date").value=(new Date).toJSON().slice(0,10)}))})(),v(),a.addEventListener("click",(()=>{i.classList.add("show")})),u.addEventListener("click",(e=>{e.preventDefault(),(()=>{const e=document.querySelector(".projectAddPopup"),n=document.createElement("div");n.classList.add("new-project-title"),m.insertBefore(n,m.children[m.childElementCount-1]);const c=new Image;c.src=t,n.appendChild(c);const s=document.createElement("button");s.id="project",s.textContent=e.value,n.appendChild(s);const l=document.querySelector(".task-list");l.childNodes[1].textContent=e.value,g(),e.value="",i.classList.remove("show");const d=new Image;d.src=o,n.appendChild(d),d.addEventListener("click",(()=>{const e=d.parentNode.children[1].textContent;if(1===h.childElementCount)d.parentNode.remove(),l.childNodes[1].textContent="Casual",g();else{for(let t=0;t<=r.length;t+=1)e===r[t].project&&r.splice(t,1);d.parentNode.remove(),l.childNodes[1].textContent="Casual",g()}})),console.log(r),v()})()})),p.addEventListener("click",(e=>{const t=document.querySelector(".projectAddPopup");e.preventDefault(),i.classList.remove("show"),t.value=""})),(()=>{const e=document.querySelector(".add-task-button"),t=document.querySelector(".cancel-task-button"),o=document.querySelector(".vertical"),n=document.querySelector(".horizontol");e.addEventListener("click",(e=>{e.preventDefault(),(()=>{const e=document.querySelector(".form-name"),t=document.querySelector(".form-date"),o=document.querySelector(".form-type"),n=document.querySelector(".task-list").children[0].textContent,c=e.value,s=t.value,l=o.value,a=document.querySelector(".add-task-form"),i=new d(n,c,s,l,"incomplete");i.addingNewTask(),r.push(i),e.value="",t.value=(new Date).toJSON().slice(0,10),o.value="Normal",a.classList.remove("adding")})(),o.classList.remove("adding"),n.classList.remove("adding"),document.querySelector(".main-container").classList.remove("show")})),t.addEventListener("click",(e=>{e.preventDefault(),o.classList.remove("adding"),n.classList.remove("adding"),document.querySelector(".main-container").classList.remove("show"),t.parentNode.parentNode.parentNode.classList.remove("adding")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
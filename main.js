(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var o=e.g.document;if(!t&&o&&(o.currentScript&&(t=o.currentScript.src),!t)){var c=o.getElementsByTagName("script");c.length&&(t=c[c.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=e.p+"1f757ac1762962d60ddc.png",o=e.p+"d367d5dbff6ca8e7e2f2.png",c=e.p+"df3b5dddd60da7069980.png",n=e.p+"fe50e1a3f0405d606b0c.png",r=e.p+"cfabfc38136dc55a9a0d.png",s=[],d=()=>{const e=document.querySelector(".tasks"),t=document.querySelector(".bg-image");if("No Task Yet!"===e.children[0].textContent)e.children[0].remove(),t.src=n;else if(1===e.childElementCount){const o=document.createElement("h1");o.textContent="No Task Yet!",e.insertBefore(o,e.children[0]),t.src=r}},l=class{constructor(e,t,o,c){this.project=e,this.title=t,this.date=o,this.type=c}addingNewTask(){const e=document.querySelector(".tasks"),t=document.createElement("div");t.classList.add("task");const n=document.createElement("p");n.textContent=this.title;const r=document.createElement("p");r.textContent=this.date;const s=document.createElement("p");s.textContent=this.type;const l=document.createElement("div");l.classList.add("task-option");const a=new Image;a.src=c;const i=new Image;i.src=o,e.appendChild(t),t.appendChild(n),t.appendChild(r),t.appendChild(s),t.appendChild(l),l.appendChild(a),l.appendChild(i),d(),a.addEventListener("click",(()=>{a.parentNode.parentNode.classList.toggle("complete")})),i.addEventListener("click",(()=>{i.parentNode.parentNode.remove(),d()}))}},a=document.querySelector(".new-project"),i=document.querySelector(".project-form"),u=document.querySelector(".add-button"),m=document.querySelector(".new-projects"),p=document.querySelector(".cancle-button"),h=document.querySelector(".tasks"),g=()=>{const e=document.querySelectorAll("#project"),t=document.querySelector(".task-list");e.forEach((e=>{e.addEventListener("click",(()=>{t.childNodes[1].textContent=e.textContent,(()=>{for(;h.childElementCount>1;)h.lastChild.remove();const e=document.querySelector(".task-list").children[0].textContent;for(let t=0;t<s.length;t+=1)e===s[t].project&&new l(s[t].project,s[t].title,s[t].date,s[t].type).addingNewTask()})()}))}))};(()=>{const e=document.querySelector(".menu"),t=document.querySelector(".projects"),o=document.querySelector(".task-list"),c=document.querySelector(".tasks"),n=document.querySelector(".task"),r=document.querySelector(".add-task"),s=document.querySelector(".vertical"),d=document.querySelector(".horizontol"),l=document.querySelector(".add-task-form");o.children[0].textContent="Casual",e.addEventListener("click",(()=>{m.childElementCount>2&&document.querySelectorAll(".new-project-title").forEach((e=>{e.classList.toggle("show")})),e.classList.toggle("change"),t.classList.toggle("show"),o.classList.toggle("show"),l.classList.toggle("show"),i.classList.remove("show"),c.classList.toggle("show"),n.classList.toggle("show")})),r.addEventListener("click",(()=>{s.classList.toggle("adding"),d.classList.toggle("adding"),l.classList.toggle("adding"),e.parentNode.parentNode.classList.add("show"),document.querySelector(".form-date").value=(new Date).toJSON().slice(0,10)}))})(),g(),a.addEventListener("click",(()=>{i.classList.add("show")})),u.addEventListener("click",(e=>{e.preventDefault(),(()=>{const e=document.querySelector(".projectAddPopup"),c=document.createElement("div");c.classList.add("new-project-title"),m.insertBefore(c,m.children[m.childElementCount-1]);const n=new Image;n.src=t,c.appendChild(n);const r=document.createElement("button");r.id="project",r.textContent=e.value,c.appendChild(r),e.value="",i.classList.remove("show");const d=new Image;d.src=o,c.appendChild(d),d.addEventListener("click",(()=>{d.parentNode.remove()})),console.log(s),g()})()})),p.addEventListener("click",(e=>{const t=document.querySelector(".projectAddPopup");e.preventDefault(),i.classList.remove("show"),t.value=""})),(()=>{const e=document.querySelector(".add-task-button"),t=document.querySelector(".cancel-task-button"),o=document.querySelector(".vertical"),c=document.querySelector(".horizontol");e.addEventListener("click",(e=>{e.preventDefault(),(()=>{const e=document.querySelector(".form-name"),t=document.querySelector(".form-date"),o=document.querySelector(".form-type"),c=document.querySelector(".task-list").children[0].textContent,n=e.value,r=t.value,d=o.value,a=document.querySelector(".add-task-form"),i=new l(c,n,r,d);i.addingNewTask(),s.push(i),e.value="",t.value=(new Date).toJSON().slice(0,10),o.value="Normal",a.classList.remove("adding"),console.log(s)})(),o.classList.remove("adding"),c.classList.remove("adding"),document.querySelector(".main-container").classList.remove("show")})),t.addEventListener("click",(e=>{e.preventDefault(),o.classList.remove("adding"),c.classList.remove("adding"),document.querySelector(".main-container").classList.remove("show"),t.parentNode.parentNode.parentNode.classList.remove("adding")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,